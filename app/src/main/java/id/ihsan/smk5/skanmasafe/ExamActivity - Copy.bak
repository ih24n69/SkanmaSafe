package id.ihsan.smk5.skanmasafe;

import android.content.Context;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class ExamActivity extends AppCompatActivity {

    private MediaPlayer alarmPlayer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_exam);

        WebView webView = findViewById(R.id.webView);
        Button exitButton = findViewById(R.id.exitButton);

        WebSettings webSettings = webView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        webSettings.setDomStorageEnabled(true);
        webSettings.setDatabaseEnabled(true);
        webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);
        webSettings.setSaveFormData(true);

        // Anti translate & perbaikan tampilan
        webSettings.setDefaultTextEncodingName("utf-8");
        webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NORMAL);
        webSettings.setLoadsImagesAutomatically(true);

        webView.setWebViewClient(new WebViewClient() {
            @Override
            public void onReceivedError(WebView view, int errorCode,
                                        String description, String failingUrl) {
                super.onReceivedError(view, errorCode, description, failingUrl);
                Toast.makeText(ExamActivity.this,
                        "Gagal memuat: " + description, Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onPageFinished(WebView view, String url) {
                super.onPageFinished(view, url);
                // Sisipkan atribut anti-translate setelah halaman selesai dimuat
                view.evaluateJavascript(
                        "document.getElementsByTagName('html')[0].setAttribute('translate','no');",
                        null
                );
            }
        });

        String rawUrl = getIntent().getStringExtra("url");
        String url = normalizeUrl(rawUrl);

        if (isConnected() && url != null && isValidUrl(url)) {
            webView.loadUrl(url);
        } else {
            Toast.makeText(this,
                    "Tidak ada koneksi internet atau URL tidak valid",
                    Toast.LENGTH_LONG).show();
        }

        hideSystemUI();

        exitButton.setOnClickListener(v -> {
            triggerAlarm();
            // tunggu 1.5 detik biar suara sempat keluar
            new Handler().postDelayed(this::finish, 1500);
        });
    }

    private boolean isConnected() {
        ConnectivityManager cm = (ConnectivityManager)
                getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
        return activeNetwork != null && activeNetwork.isConnected();
    }

    private String normalizeUrl(String url) {
        if (url == null || url.trim().isEmpty()) return null;
        url = url.trim();
        if (!url.startsWith("http://") && !url.startsWith("https://")) {
            if (url.contains(":")) {
                url = "http://" + url;
            } else {
                url = "https://" + url;
            }
        }
        return url;
    }

    private boolean isValidUrl(String url) {
        return url != null && (url.startsWith("http://") || url.startsWith("https://"));
    }

    private void hideSystemUI() {
		final View decorView = getWindow().getDecorView();

		decorView.setSystemUiVisibility(
				View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
						| View.SYSTEM_UI_FLAG_FULLSCREEN
						| View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
						| View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
						| View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
						| View.SYSTEM_UI_FLAG_LAYOUT_STABLE
		);

		// Paksa tetap sembunyi jika user swipe
		decorView.setOnSystemUiVisibilityChangeListener(visibility -> {
			if ((visibility & View.SYSTEM_UI_FLAG_FULLSCREEN) == 0) {
				decorView.setSystemUiVisibility(
						View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
								| View.SYSTEM_UI_FLAG_FULLSCREEN
								| View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
								| View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
								| View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
								| View.SYSTEM_UI_FLAG_LAYOUT_STABLE
				);
			}
		});
	}

    @Override
    protected void onStop() {
        super.onStop();
        triggerAlarm();
    }

    private void triggerAlarm() {
        try {
            AudioManager audio = (AudioManager) getSystemService(AUDIO_SERVICE);
            int maxVol = audio.getStreamMaxVolume(AudioManager.STREAM_MUSIC);
            int newVol = (int) (maxVol * 0.9);
            audio.setStreamVolume(AudioManager.STREAM_MUSIC, newVol, 0);

            alarmPlayer = MediaPlayer.create(this,
                    Uri.parse("android.resource://" + getPackageName() + "/" + R.raw.exit_alarm));
            alarmPlayer.setLooping(false);
            alarmPlayer.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
